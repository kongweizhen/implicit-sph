<ParameterList name="Implicit SPH Top-Level Parameters">
  <ParameterList name="Kernel Function">
    <Parameter name="cut over h" type="double" value="2.0"/>      
    <Parameter name="type" type="string" value="Wendland"/>          
    <!-- Available kernels - cut/h: 
         Wendland(default)- 2.0, Cubic - 3.0, Quintic - 3.0 -->  
  </ParameterList>
  <ParameterList name="Random Number Generator">
    <Parameter name="seed" type="int" value="100"/>
  </ParameterList>
  <ParameterList name="Physics Configuration">
    <Parameter name="Surface Tension"              type="string" value="Enabled"/>
    <Parameter name="Poisson Boltzmann"            type="string" value="Enabled"/>
    <Parameter name="Incompressible Navier Stokes" type="string" value="Enabled"/>
  </ParameterList> 
  <ParameterList name="Multiphase Flow">
    <Parameter name="Surface Tension" type="string" value="ContinuumSurfaceForce"/>     
  </ParameterList>  
  <ParameterList name="Particle Information">
    <Parameter name="type:1" type="string" value="fluid:phase:1"/>
    <Parameter name="type:2" type="string" value="fluid:phase:2"/>
    <Parameter name="type:3" type="string" value="fluid:phase:2"/>
    <Parameter name="type:4" type="string" value="solid:fixed"/>
    <Parameter name="type:5" type="string" value="solid:fixed"/>
    <!-- types can be used to represent subodmain number
         see lid-driven-cavity.xml
         Available attributes are fluid/solid, moving(default)/fixed.
         Note that solid particles can move with prescribed rigid motion.
    -->
  </ParameterList>
  <ParameterList name="Poisson Boltzmann">
    <Parameter name="psiref" type="double" value="0.025888"/>
    <!-- F = -\div{eps \grad{psi} } + 2 {ezcb/psiref} sinh{psi} -> 0, 
         where psi is normalized by psiref (default 1) --> 
    <Parameter name="linearized" type="int" value="0"/>
    <!-- F = -\div{eps \grad{psi} } + 2 {ezcb/psiref} psi -> 0, 
         if this parameter is 1 (default 0), then linearized PB is
         computed -->   
    <Parameter name="ezcb" type="double" value="2.2488e-10"/>
    <!-- e: elementary charge, cb: bulk concentration, z: valence,
         default ezcb = 1 -->
    <Parameter name="e.x"  type="double" value="1.0e8"/>
    <Parameter name="e.y"  type="double" value="0.0"/>
    <Parameter name="e.z"  type="double" value="0.0"/>
    <!-- Applied electric field, act like a body force -->
  </ParameterList>
  <ParameterList name="Incompressible Navier Stokes">
    <Parameter name="Use Momentum Preserve Operator" type="string" value="Enabled"/> 
    <Parameter name="Singular Poisson" type="string" value="NullSpace"/> 
    <!-- Available approaches to solve a singular poisson (pure neumann)
         NullSpace - provide a basis for rigid body mode
         PinZero - set a single point to have a dirichlet point
         DoubleDiag - increase one diagonal member to be doubled
      -->
    <Parameter name="Boundary" type="string" value="MorrisHolmes"/>
    <!-- Available boundary:
         NavierSlip (non-zero beta should be set together),
         Dirichlet, 
         MorrisNormal, 
         MorrisHolmes (default) 
      --> 
    <Parameter name="Arbitrary Lagrangian Eulerian" type="string" value="Disabled"/> 
    <!-- ALE formulation (velocity correction scheme) is appled 
         if it is enabled
      -->
    <Parameter name="theta" type="double" value="1.0"/>
    <!-- Time step theta parameter: 
         1.0 - backward Euler, 
         0.5 - Crank Nicolson -->
    <Parameter name="beta"  type="double" value="0.0"/>
    <!-- NavierSlip boundary parameter; if this is sufficiently large,
         it becomes no-slip boundary. Also note that very large beta
         actually lead no-slip layer condition, which implies that
         particles within a cut distance from the wall get no slip
         condition. -->
    <Parameter name="g.x"   type="double" value="0.0"/>
    <Parameter name="g.y"   type="double" value="-4.0e19"/>
    <Parameter name="g.z"   type="double" value="0.0"/>
    <!-- constant body force -->
    <Parameter name="umax"  type="double" value="0.1"/>
    <!-- maximum velocity, which would be used in computing analytic
         soluiton -->
  </ParameterList>
  <ParameterList name="Preconditioner">
    <Parameter name="Precond Package" type="string" value="ML"/>
    <!-- default preconditioner for the linear solver - Belos 
         one can also choose Ifpack -->
    <Parameter name="XML File" type="string" value="ml.xml"/>
    <!-- First default preconditioner parameters are loaded. If "XML
         File" exists, then the parameters are over-loaded. Further
         customization is allowed by adding parameter here.
         For NOX, it is interfaced through Stratimikos that is fully
         controllable with another XML file (advanced feature). 
         See also ml.xml for example.
    --> 
  </ParameterList>
  <ParameterList name="Analytic Solution">
    <!-- Simple error test with analytic solution;
         this parameters are used in "fix/error" via Trilinos Real Time
         Compiler (RTC). RTC is actually an emulator rather than a compiler
         and very slow. Use this feature for simple error analysis only. 
    --> 
    <ParameterList name="Variable List">
      <Parameter name="pt.x"   type="string" value="double"/>
      <Parameter name="pt.y"   type="string" value="double"/>
      <Parameter name="pt.z"   type="string" value="double"/>
      <Parameter name="umax"   type="string" value="double"/>
      <Parameter name="nu"     type="string" value="double"/>
      <Parameter name="rho"    type="string" value="double"/>
      <Parameter name="t"      type="string" value="double"/>
      <Parameter name="eczb"   type="string" value="double"/>
      <Parameter name="psiref" type="string" value="double"/>
      <Parameter name="eps"    type="string" value="double"/>
      <!-- Input list of values; nu is kinematic viscosity -->
      <Parameter name="u.x" type="string" value="double"/>
      <Parameter name="u.y" type="string" value="double"/>
      <Parameter name="u.z" type="string" value="double"/>
      <Parameter name="p"   type="string" value="double"/>
      <Parameter name="psi" type="string" value="double"/>
      <!-- Return values -->
    </ParameterList>
    <ParameterList name="Function List">
      <Parameter name="u.x" 
                 type="string" 
                 value="u.x =  umax*exp(-2.0*nu*t)*sin(pt.x)*cos(pt.y);"/>
      <Parameter name="u.y" 
                 type="string" 
                 value="u.y = -umax*exp(-2.0*nu*t)*cos(pt.x)*sin(pt.y);"/>
      <Parameter name="p" 
                 type="string" 
                 value="p = 0.25*rho*umax*umax*exp(-4.0*nu*t)*(cos(2.0*pt.x)+cos(2.0*pt.y));"/>
      <Parameter name="psi"
                 type="string"
                 value="double x = tanh(0.25)*exp(-sqrt(2*eczb/psiref/eps)*(1.0-fabs(pt.y)));
                        psi = 2.0*log((1+x)/(1-x));"/>     
      <!-- Fluid solution is Taylor Green vortex and potential (psi)
           describes the EDL with unit charge on the wall.
           See also, couette-flow.xml and poiseuille-flow.xml.
      -->
    </ParameterList>
  </ParameterList>
</ParameterList>

