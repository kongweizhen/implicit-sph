dimension          3

# 1) Initialization
# -----------------
# set parameters that need to be defined before atoms are created or read-in from a file.
# e.g., units, dimension, newton, processors, boundary, atom_style, atom_modify.

# discretization: 128, 256
variable           N equal 96
variable           r equal 0.0022

variable           len equal 0.0070

variable           dx equal 2*${r}/${N}
variable           wall equal 4*${dx}
variable           r0 equal ${r}+${wall}

variable           buflen equal 2.0e-4
variable           bufoff equal 2.0e-4

variable           rbead equal 2.5e-4

# box domain
variable           xmin equal -${r}-${wall}
variable           xmax equal  ${r}+${wall}
variable           ymin equal -${len}
variable           ymax equal  ${len}
variable           zmin equal -${r}-${wall}
variable           zmax equal  ${r}+${wall}

# smoothing length
variable           h  equal 1.5*${dx}
variable           hmin equal 1.5*${dx}

# flow parameters
variable           Umax equal 0.08

variable           tstep equal 0.04*${h}/${Umax}
variable           tfinal equal 0.5
variable           nrun equal ${tfinal}/${tstep}

# boundary and timestep
newton             off
units              si
boundary           f p f

# skin setup; not really used
variable           delay equal 0
variable           skin equal 2.0*${delay}*${tstep}*${Umax}

# atom
atom_style         isph

print              "----------------"
print              "dx = ${dx}"
print              "h = ${h}"
print              "skin = ${skin}"
print              "tstep = ${tstep}"
print              "tfinal = ${tfinal}"
print              "nrun = ${nrun}"
print              "----------------"  

# 2) Atom definition
# ------------------
# 1. There are 3 ways to define atoms in LAMMPS. 
# - read them in from a data or 
# - restart file via the read_data or 
# - read_restart commands. 
# These files can contain molecular topology information. 
#
# Or create atoms on a lattice (with no molecular topology). 
# e.g., lattice, region, create_box, create_atoms. 
# The entire set of atoms can be duplicated to make a larger simulation using the replicate command. 

lattice            bcc ${dx}

#region             domain block ${xmin} ${xmax} ${ymin} ${ymax}  ${zmin} ${zmax} units box
region             domain cylinder y 0 0 ${r0} ${ymin} ${ymax} units box

create_box         4 domain
create_atoms       1 region domain

comm_style         tiled 
balance            1.2 rcb

# to push out backup file, uncomment restart command for every N (=1000) time iteration
# restart           ${nrun}/2 pore-scale-flow-inline-3d.*.restart

# uncomment the following command and comment read_data
# from the restarting file
# read_restart       pore-scale-flow-inline-3d.*.restart

# 3) Settings
# -----------
# Once atoms and molecular topology are defined, a variety of settings can be specified: 
# force field coefficients, simulation parameters, output options, etc.
#
# Force field coefficients are set by these commands (they can also be set in the read-in files): 
# pair_coeff, bond_coeff, angle_coeff, dihedral_coeff, improper_coeff, kspace_style, 
# dielectric, special_bonds.
#
# Various simulation parameters are set by these commands: 
# neighbor, neigh_modify, group, timestep, reset_timestep, run_style, min_style, min_modify.
#
# Fixes impose a variety of boundary conditions, time integration, and diagnostic options. 
# The fix command comes in many flavors.
#
# Various computations can be specified for execution during a simulation using the compute, 
# compute_modify, and variable commands.
#
# Output options are set by the thermo, dump, and restart commands. 

neighbor           ${skin} bin
neigh_modify       every 1 delay ${delay} check yes

pair_style         isph/corrected
pair_coeff         * * multiphase-pore-scale-flow.xml ${h} ${hmin}

variable           bufmin equal ${ymin}+${bufoff}
variable           bufmax equal ${bufmin}+${buflen}

variable           yoff equal ${bufoff}+${buflen}+${rbead}*2.0
variable           beadlo equal ${ymin}+${yoff}
variable           beadhi equal ${ymax}-${yoff}

compute            geom all isph/cylinder/porous uniform-sphere 1.0 ${rbead} ${beadlo} ${beadhi} pore-scale-flow-bead-centeroids-3d.dat ${ymin} ${ymax} ${bufmin} ${bufmax} ${r} 0.0 0.0 0.0 y
compute            status all isph/status multiphase-pore-scale-flow-a-3d.txt v 1 2
compute            divergence all isph/velocity_divergence  

# delete dummy atoms
group              dummy type 0
delete_atoms       group dummy

group              fluid_1 type 1
group              fluid_2 type 2
group              solid_1 type 3
group              solid_2 type 4

# apply fix for type 1 particles: psi field particles
fix                1 all isph status 
fix                2 all isph/shift 0.07 -1 0.1 

fix                3 all isph/modify/type 1 2 0.0 0.0 ${bufmin} ${bufmax}
fix                4 all isph/ignore/phasegradient y ${bufmin} 3.0


# 4) Run a simulation
# -------------------
# A molecular dynamics simulation is run using the run command. 
# Energy minimization (molecular statics) is performed using the minimize command. 
# A parallel tempering (replica-exchange) simulation can be run using the temper command. 

#
velocity           all set 0.0 0.0 0.0 units box

set                group all isph_pressure 0.0

variable           density_1 equal 997.561
variable           viscosity_1 equal 8.9087e-07

set                group fluid_1 isph_density ${density_1}
set                group fluid_1 isph_viscosity ${viscosity_1}

variable           density_2 equal ${density_1}/2.0
variable           viscosity_2 equal ${viscosity_1}/5.0

set                group fluid_2 isph_density ${density_2}
set                group fluid_2 isph_viscosity ${viscosity_2}

#
timestep           ${tstep}  

#
variable           dumpfreq equal 1

dump               dump all custom ${dumpfreq} multiphase-pore-scale-flow-a-3d.dump id type x y z vx vy vz pressure type proc c_divergence psi psigradx psigrady psigradz
dump_modify        dump flush yes    

run                0 # ${nrun}
