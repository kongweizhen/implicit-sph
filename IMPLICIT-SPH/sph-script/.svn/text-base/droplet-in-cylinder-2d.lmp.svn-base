dimension          2

# 1) Initialization
# -----------------
# set parameters that need to be defined before atoms are created or read-in from a file.
# e.g., units, dimension, newton, processors, boundary, atom_style, atom_modify.

variable           r equal 3.0
variable           w equal 6.0*${r}

variable           rdrop equal ${r}
variable           wdrop equal 2.0*${r}

# discretization
variable           N equal 36
variable           dx equal 2.0*${r}/${N}

variable           slayer equal ${dx}*4.0
variable           rbox  equal ${r}+${slayer}

# box domain
variable           xmin equal -${w}
variable           xmax equal  ${w}
variable           ymin equal -${rbox}
variable           ymax equal  ${rbox}


# smoothing length
variable           h equal 1.5*${dx}

# set the box
variable           zmin equal -${dx}/2.0
variable           zmax equal  ${dx}/2.0

# flow parameters
variable           Umax equal 10.0

variable           tstep equal 0.1*${dx}/${Umax}
variable           tfinal equal 4.0
variable           nrun equal ${tfinal}/${tstep}

newton             off
units              si
boundary           p p p

# skin setup; not really use
variable           delay equal 0

# atom
atom_style         isph

print              "----------------"
print              "N = ${N}"
print              "dx = ${dx}"
print              "h = ${h}"
print              "tstep = ${tstep}"
print              "tfinal = ${tfinal}"
print              "nrun = ${nrun}"
print              "----------------"

# 2) Atom definition
# ------------------
# 1. There are 3 ways to define atoms in LAMMPS. 
# - read them in from a data or 
# - restart file via the read_data or 
# - read_restart commands. 
# These files can contain molecular topology information. 
#
# Or create atoms on a lattice (with no molecular topology). 
# e.g., lattice, region, create_box, create_atoms. 
# The entire set of atoms can be duplicated to make a larger simulation using the replicate command. 

##############################################################################
# comment lattice, region, create_box, create_atoms if you want to read_restart 

#lattice	    sq2 ${dx} origin 0.5 0.5 0.
lattice	           hex ${dx} origin 0.5 0.5 0.

#region            name   block       xlo      xhi        ylo       yhi        zlo       zhi units box
region             box    block ${xmin} ${xmax} ${ymin} ${ymax}  ${zmin} ${zmax} units box

create_box    	   3 box
create_atoms       1 region box

# 3) Settings
# -----------
# Once atoms and molecular topology are defined, a variety of settings can be specified: 
# force field coefficients, simulation parameters, output options, etc.
#
# Force field coefficients are set by these commands (they can also be set in the read-in files): 
# pair_coeff, bond_coeff, angle_coeff, dihedral_coeff, improper_coeff, kspace_style, 
# dielectric, special_bonds.
#
# Various simulation parameters are set by these commands: 
# neighbor, neigh_modify, group, timestep, reset_timestep, run_style, min_style, min_modify.
#
# Fixes impose a variety of boundary conditions, time integration, and diagnostic options. 
# The fix command comes in many flavors.
#
# Various computations can be specified for execution during a simulation using the compute, 
# compute_modify, and variable commands.
#
# Output options are set by the thermo, dump, and restart commands. 

neighbor           0.0 bin
neigh_modify       every 1 delay ${delay} check yes

pair_style         isph/corrected
pair_coeff         * * droplet-in-cylinder.xml ${h}

# apply fix for type 1 particles: psi field particles
fix                1 all isph
fix                2 all isph/shift 0.06

# 4) Run a simulation
# -------------------
# A molecular dynamics simulation is run using the run command. 
# Energy minimization (molecular statics) is performed using the minimize command. 
# A parallel tempering (replica-exchange) simulation can be run using the temper command. 

region             droplet  block -${wdrop} ${wdrop} -${rdrop}  ${rdrop} ${zmin} ${zmax}   units box
region             solidlo  block ${xmin} ${xmax} ${ymin} -${r}    ${zmin} ${zmax}   units box
region             solidhi  block ${xmin} ${xmax} ${r}     ${ymax} ${zmin} ${zmax}   units box

group              gr_solidlo region solidlo
group              gr_solidhi region solidhi

group              solid union gr_solidlo gr_solidhi

group              inner region droplet
group              outer subtract all inner solid

set                group inner type 1
set                group outer type 2
set                group solid type 3

set		   group inner isph_density 2.0
set		   group outer isph_density 1.0
set                group solid isph_density 1000.0

set		   group inner isph_viscosity 0.05
set		   group outer isph_viscosity 0.01

set                group all isph_pressure 0.0

#
timestep           ${tstep}

# no need to dump out
variable           dumpfreq equal 20
dump               dump all custom ${dumpfreq} droplet-in-cylinder-2d.dump id type x y z vx vy pressure psi psigradx psigrady type fx fy
dump_modify        dump flush yes

run                ${nrun}

