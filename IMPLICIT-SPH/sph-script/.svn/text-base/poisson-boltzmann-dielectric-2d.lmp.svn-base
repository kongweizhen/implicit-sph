# --------------------------------------------
# Testing exact solution \psi = \sin{x}\cos{y} 
# --------------------------------------------

dimension          2

# 1) Initialization
# -----------------
# set parameters that need to be defined before atoms are created or read-in from a file.
# e.g., units, dimension, newton, processors, boundary, atom_style, atom_modify.

# box

# discretization 
variable           dx equal 0.06544985 #--datafile

# smoothing length
variable           h   equal 1.5*${dx}

# two-dimensional problem needs to set box to z-direction 
variable           zmin equal -0.5*${h}
variable           zmax equal  0.5*${h}

# time step (we do not need this but maybe required in LAMMPS)
variable           tstep equal 1.0

# skins is zero as particles are not moving
variable           skin equal 0

# solve once non-linear problem
variable           nrun equal 1

# dump frequency
variable           dumpfreq equal 1

#
newton             off
units              si
boundary           p p p
timestep           ${tstep}

# atom
atom_style         isph
atom_modify        map array		#store global array of proc ids on each proc
# atom_modify        map hash		#store local array of proc ids and hash into global id

print              "---------------------------------"
print              "dx = ${dx}"
print              "h = ${h}"
print              "skin = ${skin}"
print              "nrun = ${nrun}"
print              "---------------------------------"

# 2) Atom definition
# ------------------
# 1. There are 3 ways to define atoms in LAMMPS. 
# - read them in from a data or 
# - restart file via the read_data or 
# - read_restart commands. 
# These files can contain molecular topology information. 
#
# Or create atoms on a lattice (with no molecular topology). 
# e.g., lattice, region, create_box, create_atoms. 
# The entire set of atoms can be duplicated to make a larger simulation using the replicate command. 

# lattice	           sq ${dx} origin 0. 0. 0.

# region             mybox block ${xmin} ${xmax} ${ymin} ${ymax} ${zmin} ${zmax} units box
# create_box    	   1 mybox
# create_atoms       1 region mybox
read_data          poisson-boltzmann-dielectric-2d.data

# 3) Settings
# -----------
# Once atoms and molecular topology are defined, a variety of settings can be specified: 
# force field coefficients, simulation parameters, output options, etc.
#
# Force field coefficients are set by these commands (they can also be set in the read-in files): 
# pair_coeff, bond_coeff, angle_coeff, dihedral_coeff, improper_coeff, kspace_style, 
# dielectric, special_bonds.
#
# Various simulation parameters are set by these commands: 
# neighbor, neigh_modify, group, timestep, reset_timestep, run_style, min_style, min_modify.
#
# Fixes impose a variety of boundary conditions, time integration, and diagnostic options. 
# The fix command comes in many flavors.
#
# Various computations can be specified for execution during a simulation using the compute, 
# compute_modify, and variable commands.
#
# Output options are set by the thermo, dump, and restart commands. 

neighbor           ${skin} bin
pair_style         isph/corrected
pair_coeff         * * poisson-boltzmann-dielectric.xml ${h} 

fix                1 all isph/error
fix                2 all isph

# 4) Run a simulation
# -------------------
# A molecular dynamics simulation is run using the run command. 
# Energy minimization (molecular statics) is performed using the minimize command. 
# A parallel tempering (replica-exchange) simulation can be run using the temper command. 

# set		   group all psi 1.0
# set                group all isph_dielectric 1.0

dump               dump all custom ${dumpfreq} poisson-boltzmann-harmonic-2d.dump id type x y z psi psigradx psigrady
dump_modify        dump flush yes

run                ${nrun}
