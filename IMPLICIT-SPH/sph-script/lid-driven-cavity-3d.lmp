dimension          3

# 1) Initialization
# -----------------
# set parameters that need to be defined before atoms are created or read-in from a file.
# e.g., units, dimension, newton, processors, boundary, atom_style, atom_modify.

# discretization 
variable           dx equal 0.031250 #--datafile dx
variable           xx equal 0.500000 #--datafile xx
variable           yy equal 0.500000 #--datafile yy
variable           zz equal 0.500000 #--datafile zz


# smoothing length
variable           h  equal 1.5*${dx}

# flow parameters
variable           Umax equal 5.0

variable           tstep equal 0.1*${h}/${Umax}
variable           tfinal equal 2.0
variable           nrun equal ${tfinal}/${tstep}

# boundary and timestep
newton             off
units              si
boundary           p p p

# skin setup; not really used
variable           delay equal 0
variable           skin equal 2.0*${delay}*${tstep}*${Umax}


# atom
atom_style         isph
atom_modify        map array		#store global array of proc ids on each proc
# atom_modify        map hash		#store local array of proc ids and hash into global id


print              "----------------"
print              "dx = ${dx}"
print              "h = ${h}"
print              "skin = ${skin}"
print              "tstep = ${tstep}"
print              "tfinal = ${tfinal}"
print              "nrun = ${nrun}"
print              "----------------"  

# 2) Atom definition
# ------------------
# 1. There are 3 ways to define atoms in LAMMPS. 
# - read them in from a data or 
# - restart file via the read_data or 
# - read_restart commands. 
# These files can contain molecular topology information. 
#
# Or create atoms on a lattice (with no molecular topology). 
# e.g., lattice, region, create_box, create_atoms. 
# The entire set of atoms can be duplicated to make a larger simulation using the replicate command. 

read_data          lid-driven-cavity-3d.data 

# 3) Settings
# -----------
# Once atoms and molecular topology are defined, a variety of settings can be specified: 
# force field coefficients, simulation parameters, output options, etc.
#
# Force field coefficients are set by these commands (they can also be set in the read-in files): 
# pair_coeff, bond_coeff, angle_coeff, dihedral_coeff, improper_coeff, kspace_style, 
# dielectric, special_bonds.
#
# Various simulation parameters are set by these commands: 
# neighbor, neigh_modify, group, timestep, reset_timestep, run_style, min_style, min_modify.
#
# Fixes impose a variety of boundary conditions, time integration, and diagnostic options. 
# The fix command comes in many flavors.
#
# Various computations can be specified for execution during a simulation using the compute, 
# compute_modify, and variable commands.
#
# Output options are set by the thermo, dump, and restart commands. 

neighbor           ${skin} bin
neigh_modify       every 1 delay ${delay} check yes

pair_style         isph/corrected
pair_coeff         * * lid-driven-cavity.xml ${h} 

# apply fix for type 1 particles: psi field particles
fix                1 all isph
fix                2 all isph/shift 0.07

# 4) Run a simulation
# -------------------
# A molecular dynamics simulation is run using the run command. 
# Energy minimization (molecular statics) is performed using the minimize command. 
# A parallel tempering (replica-exchange) simulation can be run using the temper command. 

#
group              flow type 1
velocity           flow set 0.0 0.0 0.0 units box

group              wall type 2
velocity           wall set 0.0 0.0 0.0 units box

group              surface type 3
velocity           surface set ${Umax} 0.0 0.0 units box

#
timestep           ${tstep}  

#
variable           dumpfreq equal 4

dump               dump all custom ${dumpfreq} lid-driven-cavity-3d.dump id type x y z vx vy vz pressure type 
dump_modify        dump flush yes    

run                ${nrun}
